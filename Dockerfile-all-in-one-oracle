FROM dalongrong/pgspider:base as build
WORKDIR /app
RUN apt-get update && apt-get install -y  automake autoconf libtool pkg-config libssl-dev libmysql++-dev libsqlite3-dev libsybdb5 freetds-dev freetds-common unzip libaio-dev libhiredis-dev libcurl4-nss-dev  unixodbc-dev 
RUN wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz && tar zxvf go1.13.3.linux-amd64.tar.gz
ENV PATH $PATH:/app/go/bin
ENV GOPATH /opt/go
RUN go get github.com/influxdata/influxdb1-client/v2
ADD oracle/instantclient-basic-linux.x64-12.2.0.1.0.zip /tmp/instantclient-basic-linux.x64-12.2.0.1.0.zip
ADD oracle/instantclient-sdk-linux.x64-12.2.0.1.0.zip /tmp/instantclient-sdk-linux.x64-12.2.0.1.0.zip
ADD oracle/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip /tmp/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip
RUN unzip /tmp/instantclient-basic-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN unzip /tmp/instantclient-sdk-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN unzip /tmp/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN ln -s /usr/local/instantclient_12_2 /usr/local/instantclient
RUN ln -s /usr/local/instantclient/libclntsh.so.12.1 /usr/local/instantclient/libclntsh.so
RUN ln -s /usr/local/instantclient/sqlplus /usr/bin/sqlplus
ENV ORACLE_HOME=/usr/local/instantclient
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/instantclient
RUN git clone --recursive  https://github.com/pgspider/griddb_fdw.git /app/postgresql-11.6/contrib/griddb_fdw
RUN wget https://github.com/griddb/c_client/releases/download/v4.2.0/griddb_c_client-4.2.0-linux.x86_64.tar.gz && tar zxvf griddb_c_client-4.2.0-linux.x86_64.tar.gz && mv  c_client-4.2.0  griddb && cp  -rf  griddb /app/postgresql-11.6/contrib/griddb_fdw
RUN git clone --recursive  https://github.com/EnterpriseDB/mongo_fdw.git /app/postgresql-11.6/contrib/mongo_fdw
RUN git clone https://github.com/pgspider/mysql_fdw.git /app/postgresql-11.6/contrib/mysql_fdw
RUN git clone https://github.com/tds-fdw/tds_fdw.git /app/postgresql-11.6/contrib/tds_fdw
RUN git clone https://github.com/pgspider/sqlite_fdw.git /app/postgresql-11.6/contrib/sqlite_fdw
RUN git clone https://github.com/pgspider/influxdb_fdw.git /app/postgresql-11.6/contrib/influxdb_fdw
RUN wget https://github.com/laurenz/oracle_fdw/archive/ORACLE_FDW_2_2_0.tar.gz && tar zxvf ORACLE_FDW_2_2_0.tar.gz && mv  oracle_fdw-ORACLE_FDW_2_2_0  oracle_fdw && cp  -rf  oracle_fdw /app/postgresql-11.6/contrib/oracle_fdw
RUN wget https://github.com/nahanni/rw_redis_fdw/archive/v1.0.tar.gz && tar zxf v1.0.tar.gz && mv rw_redis_fdw-1.0  redis_fdw && cp -rf redis_fdw /app/postgresql-11.6/contrib/redis_fdw
RUN wget https://github.com/zombodb/zombodb/archive/v4.0.tar.gz && tar zxf v4.0.tar.gz && mv zombodb-4.0  zombodb && cp -rf zombodb /app/postgresql-11.6/contrib/zombodb
RUN wget https://github.com/ClickHouse/clickhouse-odbc/releases/download/v1.1.3.20200115/clickhouse-odbc-1.1.3-Linux.tar.gz &&  tar xzvf clickhouse-odbc-1.1.3-Linux.tar.gz 
RUN git clone https://github.com/Percona-Lab/clickhousedb_fdw.git /app/postgresql-11.6/contrib/clickhousedb_fdw
RUN git clone https://github.com/citusdata/pg_cron.git /app/postgresql-11.6/contrib/pg_cron
RUN cd /app/postgresql-11.6/contrib/griddb_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/mongo_fdw && git submodule update --init && ./autogen.sh --with-master && make && make install
RUN cd /app/postgresql-11.6/contrib/mysql_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/tds_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/sqlite_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/influxdb_fdw && make USE_PGXS=1 with_llvm=no && make install USE_PGXS=1 with_llvm=no
RUN cd /app/postgresql-11.6/contrib/oracle_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/redis_fdw && make && make install
RUN cd /app/postgresql-11.6/contrib/zombodb && make clean install
RUN cd /app/postgresql-11.6/contrib/clickhousedb_fdw && make -f lib/Makefile \ 
    && make USE_PGXS=1 && make USE_PGXS=1 install
RUN cd /app/postgresql-11.6/contrib/pg_cron && make  && make install

FROM debian:stretch-slim
ENV GOSU_VERSION 1.11
RUN apt-get update && apt-get install -y wget libreadline-dev libmongoc-1.0-0  libmysql++-dev libsqlite3-dev libsybdb5 freetds-dev freetds-common unzip libaio-dev libhiredis-dev libcurl4-nss-dev  unixodbc-dev 
# explicitly set user/group IDs
RUN set -eux; \
	groupadd -r postgres --gid=999; \
# https://salsa.debian.org/postgresql/postgresql-common/blob/997d842ee744687d99a2b2d95c1083a2615c79e8/debian/postgresql-common.postinst#L32-35
	useradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \
# also create the postgres user's home directory with appropriate permissions
# see https://github.com/docker-library/postgres/issues/274
	mkdir -p /var/lib/postgresql; \
	chown -R postgres:postgres /var/lib/postgresql

RUN wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
   && chmod +x /usr/local/bin/gosu \
   && gosu nobody true
# make the "en_US.UTF-8" locale so postgres will be utf-8 enabled by default
RUN set -eux; \
   if [ -f /etc/dpkg/dpkg.cfg.d/docker ]; then \
   # if this file exists, we're likely in "debian:xxx-slim", and locales are thus being excluded so we need to remove that exclusion (since we need locales)
   grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \
   sed -ri '/\/usr\/share\/locale/d' /etc/dpkg/dpkg.cfg.d/docker; \
   ! grep -q '/usr/share/locale' /etc/dpkg/dpkg.cfg.d/docker; \
   fi; \
   apt-get update; apt-get install -y locales; rm -rf /var/lib/apt/lists/*; \
   localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8

# install "nss_wrapper" in case we need to fake "/etc/passwd" and "/etc/group" (especially for OpenShift)
# https://github.com/docker-library/postgres/issues/359
# https://cwrap.org/nss_wrapper.html
RUN set -eux; \
   apt-get update; \
   apt-get install -y --no-install-recommends libnss-wrapper; \
   rm -rf /var/lib/apt/lists/*
# Oracle instantclient
ADD oracle/instantclient-basic-linux.x64-12.2.0.1.0.zip /tmp/instantclient-basic-linux.x64-12.2.0.1.0.zip
ADD oracle/instantclient-sdk-linux.x64-12.2.0.1.0.zip /tmp/instantclient-sdk-linux.x64-12.2.0.1.0.zip
ADD oracle/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip /tmp/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip
RUN unzip /tmp/instantclient-basic-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN unzip /tmp/instantclient-sdk-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN unzip /tmp/instantclient-sqlplus-linux.x64-12.2.0.1.0.zip -d /usr/local/
RUN ln -s /usr/local/instantclient_12_2 /usr/local/instantclient
RUN ln -s /usr/local/instantclient/libclntsh.so.12.1 /usr/local/instantclient/libclntsh.so
RUN ln -s /usr/local/instantclient/sqlplus /usr/bin/sqlplus
ENV ORACLE_HOME=/usr/local/instantclient
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/instantclient
RUN rm -rf /tmp/*
RUN mkdir /docker-entrypoint-initdb.d
COPY  --from=build  /usr/local/pgspider /usr/local/pgspider
COPY  --from=build  /app/postgresql-11.6/contrib/griddb_fdw/griddb/bin/libgridstore.so.0.0.0 /usr/lib/x86_64-linux-gnu/libgridstore.so
COPY  --from=build  /app/clickhouse-odbc-1.1.3-Linux/lib64/ /opt/clickhousedb/
RUN ln -s /usr/lib/x86_64-linux-gnu/libgridstore.so /usr/lib/x86_64-linux-gnu/libgridstore.so.0
RUN sed -ri "s!^#?(listen_addresses)\s*=\s*\S+.*!\1 = '*'!" /usr/local/pgspider/share/postgresql/postgresql.conf.sample; \
   grep -F "listen_addresses = '*'" /usr/local/pgspider/share/postgresql/postgresql.conf.sample
RUN mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql  && chmod 2777 /var/run/postgresql
ENV PATH $PATH:/usr/local/pgspider/bin
ENV PGDATA /var/lib/postgresql/data
RUN mkdir -p "$PGDATA" && chown -R postgres:postgres "$PGDATA" && chmod 777 "$PGDATA"
VOLUME /var/lib/postgresql/data
COPY docker-entrypoint.sh /usr/local/bin/
RUN ln -s usr/local/bin/docker-entrypoint.sh / # backwards compat
ENTRYPOINT ["docker-entrypoint.sh"]

EXPOSE 5432
CMD ["postgres"]